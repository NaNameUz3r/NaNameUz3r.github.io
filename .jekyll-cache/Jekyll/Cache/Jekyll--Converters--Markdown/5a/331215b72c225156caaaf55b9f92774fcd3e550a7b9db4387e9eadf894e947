I"<p>Врубаемся в Декларативную модель — Часть 5. 
<!--more--></p>

<h3 id="колдуем-по-взрослому">Колдуем по взрослому</h3>

<p>Программирование высшего порядка. Что может прийти на ум сперва, если не быть знакомым с темой и термином? Ну, например:</p>

<p style="text-align: center;"><img src="/images/high_order.jpg" alt="Рекурсия" /></p>
<p><em><center>Архи-кодер владеющий программированием высшего порядка</center></em></p>

<p>А теперь серьезно. Программирование высшего порядка, это методы программирования с использованием процедур (функций) высшего порядка (или “первого” класса). Ага! А что это за порядок такой, если речь не про сакрально-волшебные сверхсилы CS просветления?</p>

<p>Сперва нужно рассмотреть такую штуку, как <em>лексическое замыкание</em>.</p>

<p>Собственно, замыкание — это такая функция, в которой есть ссылки на объекты (например переменные), объявленные вне тела этой функции. В коде это выглядит как объявление функции в другой функции. Вот эта последняя, “внутренняя” функция, фактически имеет доступ ко внешним, по отношению к ней объектам — переменным объявленным в теле “функции-обертки”, её аргументам.</p>

<p>Пример на python:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># "замыкающая", внешняя функция
def mad_printer(some_new_law):

    # вложенная функция
    def actual_printer():
        print(some_new_law)

    return actual_printer

emergency_law = mad_printer("freedom is slavery")
emergency_law()
</code></pre></div></div>

<p>На выходе будет получена строка, переданная в замыкающую функцию - “freedom is slavery”.</p>

<p>Хотя функция actual_printer и не имеет в своем теле переменной some_new_law, мы видим что такой код работает без проблем. Можно сказать, что в примере выше мы привязываем определенное замыкание к переменной emergency_law. И это замыкание включает в себя <em>возвращаемую функцию actual_printer и доступное ей окружение</em>.</p>

<p class="info">Замыкание — это некоторая форма <em>записи</em> которая хранит в себе <em>функцию первого порядка</em> вместе с её окружением.</p>

<p>Ладно, ладно. А что такое функция первого порядка, не только в декларативной модели, а в программировании вообще?</p>

<p>Можно сказать, что система (язык программирования) имеет функции первого класса, если функции рассматриваются как <em>объекты первого класса</em>. На человеческом языке это означает, что есть такой тип как “процедура” (функция), и любая реально объявляемая процедура автоматически становится значением этого типа.</p>

<p>Что нам это дает на практике? Мы можем передавать процедуры, в другие процедуры, <strong>как аргументы</strong>, и получать их как результат работы (return)!</p>

<p>Сам термин высшего порядка исходит от концепции порядка процедуры. Если у какой то процедуры в аргументах нет других процедур — это функция нулевого порядка. Процедура, у которой есть хотя бы один аргумент-процедура — процедура первого порядка, и так далее.</p>

<p>Короче говоря, программирование высшего порядка, по сути, это о том что процедуры могут быть любого порядка. Никакой магии, но надеюсь вы уже начали понимать, что потенциал у этой техники очень большой.</p>

:ET